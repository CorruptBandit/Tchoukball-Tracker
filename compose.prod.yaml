services:
  frontend-prod:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.frontend.prod
    ports:
      - "5173:5173"  # Assuming frontend runs on port 80 in production
    environment:
      - NODE_ENV=production

  backend-prod:
    build:
      context: ./server
      dockerfile: ../docker/Dockerfile.backend.prod
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - GIN_MODE=${GIN_MODE}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - MONGO_HOST=${MONGO_HOST}
      - TLS_CERT_FILE=${TLS_CERT_FILE}
      - TLS_CA_FILE=${TLS_CA_FILE}
    volumes:
      - ./docker/tls/data/mongo/mongodb.pem:/etc/ssl/mongodb.pem
      - ./docker/tls/data/mongo/ca.pem:/etc/ssl/ca.pem
    depends_on:
      - mongodb

  mongodb:
    image: mongo:latest  # Uses official MongoDB image.
    hostname: tchoukballtracker.co.uk  # Sets the hostname for MongoDB container.
    ports:
      - "27017:27017"  # Exposes MongoDB's default port to the host.
    volumes:  # Mounts configuration files and SSL certificates for MongoDB.
      - ./docker/tls/data/mongo/mongod.conf:/etc/mongod.conf
      - ./docker/tls/data/certbot/conf:/etc/letsencrypt
      - ./docker/tls/data/mongo/mongodb.pem:/etc/ssl/mongodb.pem
      - ./docker/tls/data/mongo/ca.pem:/etc/ssl/ca.pem
    command: >  # Custom command to run MongoDB with SSL and periodically rotate certificates.
     /bin/sh -c '
      mongod --config /etc/mongod.conf & \
      while sleep 6h; do
      mongosh --eval "db.adminCommand({rotateCertificates: 1})" \
      --host tchoukballtracker.co.uk \
      --tls \
      --tlsCertificateKeyFile /etc/ssl/mongodb.pem;
      --tlsCAFile /etc/ssl/ca.pem
     done;'

  nginx:
    image: nginx:1.15-alpine  # Uses NGINX 1.15 on Alpine for a lightweight web server.
    restart: unless-stopped  # Automatically restarts unless explicitly stopped.
    volumes:  # Mounts configuration directories and SSL certificate locations.
      - ./docker/tls/data/nginx:/etc/nginx/conf.d
      - ./docker/tls/data/certbot/conf:/etc/letsencrypt
      - ./docker/tls/data/certbot/www:/var/www/certbot
    ports:
      - "80:80"  # Maps HTTP port.
      - "443:443"  # Maps HTTPS port.
    command: >  # Custom command to reload NGINX configuration every 6 hours.
      /bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'

  certbot:
    image: certbot/certbot:v2.9.0  # Uses the official Certbot image for SSL certificate management.
    restart: unless-stopped  # Automatically restarts unless explicitly stopped.
    volumes:  # Mounts directories for configuration, webroot path, and SSL for MongoDB.
      - ./docker/tls/data/certbot/conf:/etc/letsencrypt
      - ./docker/tls/data/certbot/www:/var/www/certbot
      - ./docker/tls/data/mongo/mongodb.pem:/etc/ssl/mongodb.pem
    entrypoint: >  # Custom entrypoint to periodically renew SSL certificates and update MongoDB's SSL certificate.
      /bin/sh -c '
        trap "exit" TERM;
        while :; do
          certbot renew --deploy-hook "
            cat /etc/letsencrypt/live/tchoukballtracker.co.uk/fullchain.pem \
            /etc/letsencrypt/live/tchoukballtracker.co.uk/privkey.pem \
            > /etc/ssl/mongodb.pem \
            && chmod 644 /etc/ssl/mongodb.pem"
          sleep 12h & wait $$!;
        done;'
