# Inspired from: https://github.com/BretFisher/node-docker-good-defaults/
---
x-common-settings: &common-settings
  build:
    context: .
    dockerfile: ./docker/Dockerfile.frontend.dev
    args:
      NODE_ENV: ${NODE_ENV:-}
      HOST_UID: ${HOST_UID:-}
      HOST_GID: ${HOST_GID:-}
  volumes:
    - ./client:/opt/node_app/app/client
    - ./server:/opt/node_app/app/server
    # bind-mounting these two files in will let you add packages during development without rebuilding
    # for example, to add bower to your app while developing, just install it inside the container
    # and then nodemon will restart. Your changes will last until you "docker compose down" and will
    # be saved on host for next build.
    # remember to isntall from the parent directory to the code bind-mount:
    # docker compose exec -w /opt/node_app node npm install --save bower
    - ./package.json:/opt/node_app/package.json
    - ./package-lock.json:/opt/node_app/package-lock.json
    # this is a workaround to prevent host node_modules from accidently getting mounted in container
    # in case you want to use node/npm both outside container for test/lint etc. and also inside container
    # this will overwrite the default node_modules dir in container so it won't conflict with our
    # /opt/node_app/node_modules location.
    - notused:/opt/node_app/app/node_modules

services:
  frontend:
    <<: *common-settings
    init: true  # Handle signals correctly
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV
  
  backend:
    build:
      context: ./server
      dockerfile: ../docker/Dockerfile.backend.dev
    ports:
      - "8080:8080"
    volumes:
      - ./docker/tls/data/mongo/mongodb.pem:/etc/ssl/mongodb.pem
      - ./docker/tls/data/mongo/ca.pem:/etc/ssl/ca.pem
      - ./docker/tls/data/mongo/privkey.pem:/etc/ssl/privkey.pem
      - ./docker/tls/data/mongo/fullchain.pem:/etc/ssl/fullchain.pem
      - ./server:/app
      - .env:/app/.env
    depends_on:
      - mongodb

  mongodb:
    image: mongo:latest  # Uses official MongoDB image.
    hostname: tchoukballtracker.co.uk  # Sets the hostname for MongoDB container.
    ports:
      - "27017:27017"  # Exposes MongoDB's default port to the host.
    volumes:  # Mounts configuration files and SSL certificates for MongoDB.
      - ./docker/tls/data/mongo/mongod.conf:/etc/mongod.conf
      - ./docker/tls/data/certbot/conf:/etc/letsencrypt
      - ./docker/tls/data/mongo/mongodb.pem:/etc/ssl/mongodb.pem
      - ./docker/tls/data/mongo/ca.pem:/etc/ssl/ca.pem
    command: >  # Custom command to run MongoDB with SSL and periodically rotate certificates.
     /bin/sh -c '
      mongod --config /etc/mongod.conf & \
      while sleep 6h; do
      mongosh --eval "db.adminCommand({rotateCertificates: 1})" \
      --host tchoukballtracker.co.uk \
      --tls \
      --tlsCertificateKeyFile /etc/ssl/mongodb.pem;
      --tlsCAFile /etc/ssl/ca.pem
     done;'

volumes:
  notused:
